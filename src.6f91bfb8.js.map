{"version":3,"sources":["src/mapper.js","src/index.js"],"names":["mapper","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","TelexType","CharCode","telexConverter","text","textArr","split","map","word","code","charCodeAt","indexOf","join","telexReverter","result","telex","index","replaceAll","String","fromCharCode","textToEmoji","textAreaValue","toLowerCase","char","emojiToText","emoji","value","Object","values","forEach","character","keys","document","addEventListener","resultArea","getElementById","textAreaText","buttonT2E","buttonE2T","buttonCopy","spinner","style","display","copyText","select","setSelectionRange","execCommand","setTimeout","setAttribute"],"mappings":"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","file":"src.6f91bfb8.js","sourceRoot":"..","sourcesContent":["const mapper = {\n  a: '😀',\n  b: '😃',\n  c: '😄',\n  d: '😁',\n  e: '😆',\n  f: '😅',\n  g: '😂',\n  h: '🤣',\n  i: '🥲',\n  j: '☺️',\n  k: '😊',\n  l: '😇',\n  m: '🙂',\n  n: '🙃',\n  o: '😉',\n  p: '😌',\n  q: '😍',\n  r: '🥰',\n  s: '😘',\n  t: '😗',\n  u: '😙',\n  v: '😚',\n  w: '😋',\n  x: '😛',\n  y: '😝',\n  z: '😜',\n  ' ': '.',\n};\n\nconst TelexType = [\n  'aws',\n  'awf',\n  'awr',\n  'awx',\n  'awj',\n  'aas',\n  'aaf',\n  'aar',\n  'aax',\n  'aaj',\n  'ees',\n  'eef',\n  'eer',\n  'eex',\n  'eej',\n  'oos',\n  'oof',\n  'oor',\n  'oox',\n  'ooj',\n  'ows',\n  'owf',\n  'owr',\n  'owx',\n  'owj',\n  'uws',\n  'uwf',\n  'uwr',\n  'uwx',\n  'uwj',\n  'as',\n  'af',\n  'ar',\n  'ax',\n  'aj',\n  'aw',\n  'aa',\n  'dd',\n  'es',\n  'ef',\n  'er',\n  'ex',\n  'ej',\n  'ee',\n  'is',\n  'if',\n  'ir',\n  'ix',\n  'ij',\n  'os',\n  'of',\n  'or',\n  'ox',\n  'oj',\n  'oo',\n  'ow',\n  'us',\n  'uf',\n  'ur',\n  'ux',\n  'uj',\n  'uw',\n  'ys',\n  'yf',\n  'yr',\n  'yx',\n  'yj',\n];\nconst CharCode = [\n  7855, 7857, 7859, 7861, 7863, 7845, 7847, 7849, 7851, 7853, 7871, 7873, 7875,\n  7877, 7879, 7889, 7891, 7893, 7895, 7897, 7899, 7901, 7903, 7905, 7907, 7913,\n  7915, 7917, 7919, 7921, 225, 224, 7843, 227, 7841, 259, 226, 273, 233, 232,\n  7867, 7869, 7865, 234, 237, 236, 7881, 297, 7883, 243, 242, 7887, 245, 7885,\n  244, 417, 250, 249, 7911, 361, 7909, 432, 253, 7923, 7927, 7929, 7925,\n];\n\nfunction telexConverter(text) {\n  const textArr = text.split('');\n\n  return textArr\n    .map((word) => {\n      const code = word.charCodeAt(0);\n      if (CharCode.indexOf(code) !== -1) {\n        return TelexType[CharCode.indexOf(code)];\n      }\n      return word;\n    })\n    .join('');\n}\n\nfunction telexReverter(text) {\n  let result = text;\n\n  TelexType.map((telex, index) => {\n    result = result.replaceAll(telex, String.fromCharCode(CharCode[index]));\n  });\n\n  return result;\n}\n\nfunction textToEmoji(text) {\n  const textAreaValue = telexConverter(text).toLowerCase(); // TODO: case sensitive\n\n  return textAreaValue\n    .split('')\n    .map((char) => mapper[char])\n    .join('');\n}\n\nfunction emojiToText(emoji) {\n  const textAreaValue = emoji;\n  let value = textAreaValue;\n  Object.values(mapper).forEach((emoji, index) => {\n    const character = Object.keys(mapper)[index];\n    value = value.replaceAll(emoji, character);\n  });\n\n  return telexReverter(value);\n}\n\nexport { telexConverter, telexReverter, textToEmoji, emojiToText };\nexport default mapper;\n","import { textToEmoji, emojiToText } from './mapper';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const resultArea = document.getElementById('result');\n  const textAreaText = document.getElementById('text');\n  const buttonT2E = document.getElementById('translateText');\n  const buttonE2T = document.getElementById('translateEmoji');\n  const buttonCopy = document.getElementById('copyToClipboard');\n  const spinner = document.getElementById('spinner');\n\n  // Handle click button [Text to Emoji]\n  buttonT2E.addEventListener('click', () => {\n    resultArea.value = '';\n    // const textAreaValue = telexConverter(textAreaText.value).toLowerCase(); // TODO: case sensitive\n\n    // const result = textAreaValue\n    //   .split('')\n    //   .map((char) => mapper[char])\n    //   .join('');\n\n    resultArea.value = textToEmoji(textAreaText.value);\n  });\n\n  // Handle click button [Emoji to Text]\n  buttonE2T.addEventListener('click', () => {\n    resultArea.value = '';\n    // const textAreaValue = textAreaText.value;\n    // let value = textAreaValue;\n    // Object.values(mapper).forEach((emoji, index) => {\n    //   const character = Object.keys(mapper)[index];\n    //   value = value.replaceAll(emoji, character);\n    // });\n\n    resultArea.value = emojiToText(textAreaText.value);\n  });\n\n  // Copy to clipboard\n  const copyToClipboard = () => {\n    buttonCopy.style.display = 'none';\n    spinner.style.display = 'block';\n\n    /* Get the text field */\n    const copyText = resultArea;\n\n    /* Select the text field */\n    copyText.select();\n    copyText.setSelectionRange(0, 99999); /* For mobile devices */\n\n    /* Copy the text inside the text field */\n    document.execCommand('copy');\n\n    setTimeout(() => {\n      buttonCopy.style.display = 'block';\n      spinner.style.display = 'none';\n      buttonCopy.setAttribute('uk-icon', 'icon: check');\n    }, 500);\n    setTimeout(() => {\n      buttonCopy.setAttribute('uk-icon', 'icon: copy');\n    }, 3000);\n  };\n\n  buttonCopy.addEventListener('click', copyToClipboard);\n});\n"]}