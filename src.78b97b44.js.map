{"version":3,"sources":["src/mapper.js","src/index.js"],"names":["mapper","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","resultArea","document","getElementById","textAreaText","buttonT2E","buttonE2T","buttonCopy","spinner","addEventListener","value","textAreaValue","result","toLowerCase","split","map","char","join","Object","values","forEach","emoji","index","character","keys","replaceAll","copyToClipboard","style","display","copyText","select","setSelectionRange","execCommand","setTimeout","setAttribute"],"mappings":";;;AA8BeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA9Bf,IAAMA,EAAS,CACbC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACE,IAAA,KAGQ1B,EAAAA,EAAAA,QAAAA,QAAAA;;ACgCf,aA9DA,QAAA,gBAEA,IAAA,EAAA,EAAA,QAAA,aA4DA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA1DA,IAAM2B,EAAaC,SAASC,eAAe,UACrCC,EAAeF,SAASC,eAAe,QACvCE,EAAYH,SAASC,eAAe,iBACpCG,EAAYJ,SAASC,eAAe,kBACpCI,EAAaL,SAASC,eAAe,mBACrCK,EAAUN,SAASC,eAAe,WAGxCE,EAAUI,iBAAiB,QAAS,WAClCR,EAAWS,MAAQ,GACbC,IACAC,EADgBR,EAAaM,MAAMG,cAEtCC,MAAM,IACNC,IAAI,SAACC,GAAS1C,OAAAA,EAAO0C,QAAAA,KACrBC,KAAK,IAENhB,EAAWS,MAAQE,IAIvBN,EAAUG,iBAAiB,QAAS,WAClCR,EAAWS,MAAQ,GACbC,IACFD,EADkBN,EAAaM,MAEnCQ,OAAOC,OAAO7C,EAAd,SAAsB8C,QAAQ,SAACC,EAAOC,GAC9BC,IAAAA,EAAYL,OAAOM,KAAKlD,EAAZ,SAAoBgD,GACtCZ,EAAQA,EAAMe,WAAWJ,EAAOE,KAGlCtB,EAAWS,MAAQA,IAKrB,IAAMgB,EAAkB,WACtBnB,EAAWoB,MAAMC,QAAU,OAC3BpB,EAAQmB,MAAMC,QAAU,QAGlBC,IAAAA,EAAW5B,EAGjB4B,EAASC,SACTD,EAASE,kBAAkB,EAAG,OAG9B7B,SAAS8B,YAAY,QAErBC,WAAW,WACT1B,EAAWoB,MAAMC,QAAU,QAC3BpB,EAAQmB,MAAMC,QAAU,OACxBrB,EAAW2B,aAAa,UAAW,gBAClC,KACHD,WAAW,WACT1B,EAAW2B,aAAa,UAAW,eAClC,MAGL3B,EAAWE,iBAAiB,QAASiB","file":"src.78b97b44.js","sourceRoot":"..","sourcesContent":["const mapper = {\n  a: \"😀\",\n  b: \"😃\",\n  c: \"😄\",\n  d: \"😁\",\n  e: \"😆\",\n  f: \"😅\",\n  g: \"😂\",\n  h: \"🤣\",\n  i: \"🥲\",\n  j: \"☺️\",\n  k: \"😊\",\n  l: \"😇\",\n  m: \"🙂\",\n  n: \"🙃\",\n  o: \"😉\",\n  p: \"😌\",\n  q: \"😍\",\n  r: \"🥰\",\n  s: \"😘\",\n  t: \"😗\",\n  u: \"😙\",\n  v: \"😚\",\n  w: \"😋\",\n  x: \"😛\",\n  y: \"😝\",\n  z: \"😜\",\n  \" \": \".\"\n};\n\nexport default mapper;\n","import \"./styles.css\";\n\nimport mapper from \"./mapper\";\n\nconst resultArea = document.getElementById(\"result\");\nconst textAreaText = document.getElementById(\"text\");\nconst buttonT2E = document.getElementById(\"translateText\");\nconst buttonE2T = document.getElementById(\"translateEmoji\");\nconst buttonCopy = document.getElementById(\"copyToClipboard\"); \nconst spinner = document.getElementById(\"spinner\"); \n\n// Handle click button [Text to Emoji]\nbuttonT2E.addEventListener(\"click\", () => {\n  resultArea.value = \"\";\n  const textAreaValue = textAreaText.value.toLowerCase();\n  const result = textAreaValue\n    .split(\"\")\n    .map((char) => mapper[char])\n    .join(\"\");\n\n    resultArea.value = result;\n});\n\n// Handle click button [Emoji to Text]\nbuttonE2T.addEventListener(\"click\", () => {\n  resultArea.value = \"\";\n  const textAreaValue = textAreaText.value;\n  let value = textAreaValue;\n  Object.values(mapper).forEach((emoji, index) => {\n    const character = Object.keys(mapper)[index];\n    value = value.replaceAll(emoji, character);\n  });\n\n  resultArea.value = value;\n});\n\n\n// Copy to clipboard\nconst copyToClipboard = () => {\n  buttonCopy.style.display = \"none\";\n  spinner.style.display = \"block\";\n\n  /* Get the text field */\n  const copyText = resultArea;\n\n  /* Select the text field */\n  copyText.select();\n  copyText.setSelectionRange(0, 99999); /* For mobile devices */\n\n  /* Copy the text inside the text field */\n  document.execCommand(\"copy\");\n\n  setTimeout(() => {\n    buttonCopy.style.display = \"block\";\n    spinner.style.display = \"none\";\n    buttonCopy.setAttribute('uk-icon', 'icon: check');\n  }, 500)\n  setTimeout(() => {\n    buttonCopy.setAttribute('uk-icon', 'icon: copy');\n  }, 3000)\n}\n\nbuttonCopy.addEventListener(\"click\", copyToClipboard);"]}